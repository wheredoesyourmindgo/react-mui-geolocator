{"version":3,"file":"index.esm.js","sources":["../src/MatGeolocator/MatGeolocator.tsx"],"sourcesContent":["import React, {useState, useMemo, useCallback} from 'react';\nimport {\n  Fab,\n  FabProps,\n  CircularProgress,\n  withStyles,\n  createStyles,\n  CircularProgressProps,\n} from '@material-ui/core';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport clsx from 'clsx';\nimport green from '@material-ui/core/colors/green';\n\nconst DEFAULT_TIMEOUT = 15000;\n\ntype Props = {\n  onClick: (coords: GeolocationCoordinates) => void;\n  classes: any;\n  timeout?: number;\n  onGeolocateError?: (error: GeolocationPositionError) => void;\n  circularProgressProps?: Partial<CircularProgressProps>;\n} & Partial<FabProps>;\n\nconst styles = createStyles({\n  progress: {\n    color: green[500],\n    position: 'absolute',\n    top: -4,\n    left: -4,\n    zIndex: 1,\n  },\n});\n\nconst MatGeoLocator = ({\n  classes,\n  timeout = DEFAULT_TIMEOUT,\n  size = 'small',\n  onClick,\n  onGeolocateError,\n  circularProgressProps,\n  ...rest\n}: Props) => {\n  const [locating, setLocating] = useState(false);\n\n  /**\n   * Geo-locate user position. Timeout and error after 15 seconds; default is set to run indefinitely.\n   */\n  const locate = useCallback(() => {\n    setLocating(true);\n    // https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation\n    navigator.geolocation.getCurrentPosition(\n      ({coords}) => {\n        setLocating(false);\n        onClick(coords);\n      },\n      (error) => {\n        setLocating(false);\n        onGeolocateError?.(error);\n      },\n      {enableHighAccuracy: false, maximumAge: 0, timeout: timeout}\n    );\n  }, [onClick, onGeolocateError, timeout]);\n\n  const progress = useMemo(() => {\n    const {className: classNameProp, ...props} = circularProgressProps ?? {};\n    return (\n      locating && (\n        <CircularProgress\n          size={48}\n          className={clsx([classes.progress, classNameProp])}\n          {...props}\n        />\n      )\n    );\n  }, [locating, circularProgressProps, classes]);\n\n  return (\n    <>\n      <Fab\n        size={size}\n        aria-label=\"geolocate control\"\n        onClick={locate}\n        {...rest}\n      >\n        <GpsFixedIcon />\n      </Fab>\n      {progress}\n    </>\n  );\n};\n\nexport default withStyles(styles)(MatGeoLocator);\n"],"names":["withStyles","createStyles","progress","color","green","position","top","left","zIndex","classes","timeout","size","onClick","onGeolocateError","circularProgressProps","rest","useState","locating","setLocating","locate","useCallback","navigator","geolocation","getCurrentPosition","coords","error","enableHighAccuracy","maximumAge","useMemo","classNameProp","className","props","React","CircularProgress","clsx","Fab","aria-label","GpsFixedIcon"],"mappings":"kmBAaA,MA8EeA,EApEAC,EAAa,CAC1BC,SAAU,CACRC,MAAOC,EAAM,KACbC,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,OAAQ,KA8DGR,CA1DO,gBACpBS,IAAAA,YACAC,QAAAA,aAtBsB,WAuBtBC,KAAAA,aAAO,UACPC,IAAAA,QACAC,IAAAA,iBACAC,IAAAA,sBACGC,2FAE6BC,GAAS,GAAlCC,OAAUC,OAKXC,EAASC,EAAY,WACzBF,GAAY,GAEZG,UAAUC,YAAYC,mBACpB,gBAAEC,IAAAA,OACAN,GAAY,GACZN,EAAQY,IAEV,SAACC,GACCP,GAAY,SACZL,GAAAA,EAAmBY,IAErB,CAACC,oBAAoB,EAAOC,WAAY,EAAGjB,QAASA,KAErD,CAACE,EAASC,EAAkBH,IAEzBR,EAAW0B,EAAQ,WACvB,YAA6Cd,EAAAA,EAAyB,GAApDe,IAAXC,UAA6BC,qBACpC,OACEd,GACEe,gBAACC,KACCtB,KAAM,GACNmB,UAAWI,EAAK,CAACzB,EAAQP,SAAU2B,KAC/BE,KAIT,CAACd,EAAUH,EAAuBL,IAErC,OACEuB,gCACEA,gBAACG,KACCxB,KAAMA,EACNyB,aAAW,oBACXxB,QAASO,GACLJ,GAEJiB,gBAACK,SAEFnC"}